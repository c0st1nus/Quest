import { styled } from 'styled-components';
import { InputBox } from '../../components/InputBox/InputBox';
import { useState, useEffect } from 'react';
import { Button } from '../../components/Button/Button';
import { useNavigate } from "react-router-dom";


const Header = styled.h1`
    color: #62BEC1;
    font-family: 'JetBrains Mono', monospace;
    font-size: 4vh;
`;

const Paragraph = styled.p`
    color: #62BEC1;
    font-family: 'JetBrains Mono', monospace;
    font-size: 2vh;
    margin-top: 10px;
    align-self: flex-start;
`;

const Task = styled.p`
    color: #62BEC1;
    font-family: 'JetBrains Mono', monospace;
    font-size: 3vh;
    margin-top: 10px;
    font-weight: 800;
    align-self: flex-start;
`;

const –°orrect = styled.p`
    color: #20c728;
    font-family: 'JetBrains Mono', monospace;
    font-size: 3vh;
    margin-top: 10px;
    font-weight: 800;
    align-self: flex-start;
    width: 100%;
`;

const Mistake = styled.p`
    color: #d83737;
    font-family: 'JetBrains Mono', monospace;
    font-size: 3vh;
    margin-top: 10px;
    font-weight: 800;
    align-self: flex-start;
    width: 100%;
`;

const Need = styled.p`
    color: transparent;
    font-size: 3vh;
`;

const StyledPage = styled.div`
    scrollbar-width: none;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: flex-start;
    height: 100vh;
    overflow-y: auto;
    padding: 4vh;
`;

export const FourthPage = () => {
    const navigate = useNavigate();
    const [answer, setAnswer] = useState('');
    const [answered, isAnswered] = useState(false);
    const [onTime, setTime] = useState(false);

    const checkAnswer = (value: string) => {
        if (value === '162') {
            isAnswered(true);
        }
        setAnswer(value);
    }

    const nextTask = async() => {
        if (answered) {
            localStorage.setItem('step', '5');
            await new Promise(resolve => setTimeout(resolve, 500));
            navigate(`/app/5`);
        }
    }

    useEffect(() => {
        const today = new Date();
        setTime(today.getDate() >= 31 && today.getMonth() >= 11);
    });

    return (
        <StyledPage>
            {onTime ? 
            (
                <>
                    <Paragraph>–ü–æ–ª—É—á–∏–ª–æ—Å—å –≤—á–µ—Ä–∞ —Ä–∞–∑–≥–∞–¥–∞—Ç—å —à–∏—Ñ—Ä? –ö–∞–∫–∞—è —Ç—ã —É –º–µ–Ω—è —É–º–Ω–µ–Ω—å–∫–∞—èüíï</Paragraph>
                    <Paragraph>–¢–∞–∫. –ê —Ç–µ–ø–µ—Ä—å –∑–∞–≥–∞–¥–∫–∞</Paragraph>
                    <Header>–ó–∞–≥–∞–¥–∫–∞ #4</Header>
                    <Task>–û—Ç–≤–µ—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å</Task>
                    <Paragraph>–ô–≥–∂–¥—Ñ–≥–∂ —å—ë—ç–≤ –µ—É —ä–µ—ç–π–∫—ç?</Paragraph>
                    <Paragraph>–û–π –±–æ–∂–µ –º–æ–π... –í–∏–¥–∏–º–æ —è —Å–æ—à–µ–ª —Å —É–º–∞. –õ–∞–¥–Ω–æ –ø–æ–π–¥—É –ø–æ–∫—É—à–∞—é <u><b>–¶–µ–∑–∞—Ä—è</b></u> –º–æ–∂–µ—Ç —á–µ—Ä–µ–∑ <u><b>25</b></u> –º–∏–Ω—É—Ç –ª–µ–≥—á–µ —Å—Ç–∞–Ω–µ—Ç</Paragraph>
                    <InputBox inputType="text" placeholder="–¢–≤–æ–π –æ—Ç–≤–µ—Ç" value={answer} onChange={(value) => { checkAnswer(value); }} />
                    {answered? (
                        <–°orrect>–£–º–Ω–∏—á–∫–∞! –ú–æ–∂–µ—à—å –æ—Ç–∫—Ä—ã–≤–∞—Ç—å –ø–æ–¥–∞—Ä–æ–∫ #306. –ò –ø–µ—Ä–µ—Ö–æ–¥–∏ –Ω–∞ —Å–ª–µ–¥—É—é—â—É—é —Å—Ç—Ä–∞–Ω–∏—á–∫—É</–°orrect>
                    ) : (
                        <Mistake>–ï—â–µ –Ω–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ...</Mistake>
                    )}
                    <Button onClick={nextTask} size="large" time={answered}>–î–∞–ª—å—à–µ?</Button>
                    <Need>–ó–∞–≥–∞–¥–∫–∞ #4</Need>
                </>
            ): (
                <Paragraph style={{alignSelf: "center", fontSize: "8vh", textAlign: "center"}}>–•–≤–∞—Ç–∏—Ç –Ω–∞ —Å–µ–≥–æ–¥–Ω—è! –ü—Ä–∏—Ö–æ–¥–∏ 31 –¥–µ–∫–∞–±—Ä—è!</Paragraph>
            )}
        </StyledPage>       
    );
}

export default FourthPage;