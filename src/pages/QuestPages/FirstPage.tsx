import { styled } from 'styled-components';
import { InputBox } from '../../components/InputBox/InputBox';
import { useState } from 'react';
import { Button } from '../../components/Button/Button';
import { useNavigate } from "react-router-dom";


const Header = styled.h1`
    color: #62BEC1;
    font-family: 'JetBrains Mono', monospace;
    font-size: 4vh;
`;

const Paragraph = styled.p`
    color: #62BEC1;
    font-family: 'JetBrains Mono', monospace;
    font-size: 2vh;
    margin-top: 10px;
    align-self: flex-start;
`;

const Task = styled.p`
    color: #62BEC1;
    font-family: 'JetBrains Mono', monospace;
    font-size: 3vh;
    margin-top: 10px;
    font-weight: 800;
    align-self: flex-start;
`;

const Need = styled.p`
    color: transparent;
    font-size: 3vh;
`;

const StyledPage = styled.div`
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: flex-start;
    height: 100vh;
    overflow-y: auto;
    padding: 4vh;
`;

export const FirstPage = () => {
    const navigate = useNavigate();
    const [answer, setAnswer] = useState('');
    const [answered, isAnswered] = useState(false);

    const checkAnswer = (value: string) => {
        if (value === '31-05') {
            isAnswered(true);
        }
        setAnswer(value);
    }

    const nextTask = async() => {
        if (answered) {
            localStorage.setItem('step', '2');
            await new Promise(resolve => setTimeout(resolve, 500));
            navigate(`/app/2`);
        }
    }

    return (
        <StyledPage>
            <Header>–í—Å—Ç—É–ø–ª–µ–Ω–∏–µ</Header>
            <Paragraph>–ü—Ä–µ–∂–¥–µ —á–µ–º –Ω–∞—á–Ω–µ–º, –¥–∞–≤–∞–π –æ–±–æ–∑–Ω–∞—á—É –ø—Ä–∞–≤–∏–ª–∞ –∏–≥—Ä—ã ü§ì.</Paragraph>
            <Paragraph>–í—Å–µ "–∑–∞–≥–∞–¥–∫–∏" ‚ùáÔ∏è —è–≤–ª—è—é—Ç—Å—è –∫–∞–∫–∏–º-–ª–∏–±–æ –∑–∞–∂–¥–∞–Ω–∏–µ–º, —Ä–µ—à–∏–≤ –∫–æ—Ç–æ—Ä–æ–µ —Ç—ã –º–æ–∂–µ—à—å –æ—Ç–∫—Ä—ã—Ç—å –∫–æ—Ä–æ–±–∫—É —Å –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω—ã–º –Ω–æ–º–µ—Ä–æ–º</Paragraph>
            <Paragraph>–í—Å–µ –æ—Ç–≤–µ—Ç—ã –Ω–∞ –∑–∞–≥–∞–¥–∫–∏ –≤–≤–æ–¥—è—Ç—Å—è –≤–Ω–∏–∑—É –≤ –ø–æ–ª–µ –¥–ª—è –≤–≤–æ–¥–∞</Paragraph>
            <Paragraph>–ï—Å–ª–∏ —Ç—ã –Ω–µ –∑–Ω–∞–µ—à—å –æ—Ç–≤–µ—Ç–∞, —Ç–æ –º–æ–∂–µ—à—å –ø–æ–ø—Ä–æ—Å–∏—Ç—å –ø–æ–¥—Å–∫–∞–∑–∫—É, –Ω–æ –ø–æ–º–Ω–∏, —á—Ç–æ –ø—Ä—è–º–æ–π –æ—Ç–≤–µ—Ç —è —Å–∫–∞–∂—É —Ç–æ–≥–¥–∞ –∏ —Ç–æ–ª—å–∫–æ —Ç–æ–≥–¥–∞ –∫–æ–≥–¥–∞ —Ç—ã –∏—Å–ø–æ–ª—å–∑—É–µ—à—å –≤—Å–µ –ø–æ–¥—Å–∫–∞–∑–∫–∏</Paragraph>
            <Paragraph><b>–ê –¢–ê–ö –ù–ï –ò–ù–¢–ï–†–ï–°–ù–û</b></Paragraph>
            <Paragraph>–í—Å–µ —Å–æ–±–ª—é–¥–µ–Ω–∏–µ –ø—Ä–∞–≤–∏–ª –ª–µ–∂–∏—Ç –Ω–∞ —Ç–≤–æ–µ–π –æ—Ç–≤–µ—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç–∏, –Ω–æ —è —Ä–∞—Å—Å—Ç—Ä–æ—é—Å—å –µ—Å–ª–∏ —Ç—ã –∏—Ö –Ω–∞—Ä—É—à–∏—à—å üôÅ</Paragraph>
            <Paragraph>–£–¥–∞—á–∏!</Paragraph>
            <Header>–ó–∞–≥–∞–¥–∫–∞ #1</Header>
            <Paragraph>–ü–µ—Ä–≤–∞—è –∑–∞–≥–∞–¥–∫–∞ –ø—Ä–æ—Å—Ç–∞—è, —Ä–∞–∑–æ–≥—Ä–µ–≤–æ—á–Ω–∞—è, –Ω–æ –∫–∞–∂–¥—ã–π —Ä–∞–∑ –æ–Ω–∏ –±—É–¥—É—Ç —Å–ª–æ–∂–Ω–µ–µ</Paragraph>
            <Task>–ö–æ–≥–¥–∞ —è —Ç–µ–±–µ –≤–ø–µ—Ä–≤—ã–µ –Ω–∞–ø–∏—Å–∞–ª?</Task>
            <Paragraph>–§–æ—Ä–º–∞—Ç –æ—Ç–≤–µ—Ç–∞ –î–î-–ú–ú. –ù–∞–ø—Ä–∏–º–µ—Ä 21 –ù–æ—è–±—Ä—è —ç—Ç–æ 21-11</Paragraph>
            <InputBox inputType="text" placeholder="–¢–≤–æ–π –æ—Ç–≤–µ—Ç" value={answer} onChange={(value) => { checkAnswer(value); }} />
            <Button onClick={nextTask} size="large" time={answered}>–î–∞–ª—å—à–µ?</Button>
            <Need>–ó–∞–≥–∞–¥–∫–∞ #1</Need>
        </StyledPage>       
    );
}

export default FirstPage;