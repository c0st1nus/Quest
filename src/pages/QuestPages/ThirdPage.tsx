import { styled } from 'styled-components';
import { InputBox } from '../../components/InputBox/InputBox';
import { useState, useEffect } from 'react';
import { Button } from '../../components/Button/Button';
import { useNavigate } from "react-router-dom";


const Header = styled.h1`
    color: #62BEC1;
    font-family: 'JetBrains Mono', monospace;
    font-size: 4vh;
`;

const Paragraph = styled.p`
    color: #62BEC1;
    font-family: 'JetBrains Mono', monospace;
    font-size: 2vh;
    margin-top: 10px;
    align-self: flex-start;
`;

const Task = styled.p`
    color: #62BEC1;
    font-family: 'JetBrains Mono', monospace;
    font-size: 3vh;
    margin-top: 10px;
    font-weight: 800;
    align-self: flex-start;
`;

const –°orrect = styled.p`
    color: #20c728;
    font-family: 'JetBrains Mono', monospace;
    font-size: 3vh;
    margin-top: 10px;
    font-weight: 800;
    align-self: flex-start;
    width: 100%;
`;

const Mistake = styled.p`
    color: #d83737;
    font-family: 'JetBrains Mono', monospace;
    font-size: 3vh;
    margin-top: 10px;
    font-weight: 800;
    align-self: flex-start;
    width: 100%;
`;

const Need = styled.p`
    color: transparent;
    font-size: 3vh;
`;

const StyledPage = styled.div`
    scrollbar-width: none;
    display: flex;
    flex-direction: column;
    align-items: center;
    justify-content: flex-start;
    height: 100vh;
    overflow-y: auto;
    padding: 4vh;
`;

export const ThirdPage = () => {
    const navigate = useNavigate();
    const [answer, setAnswer] = useState('');
    const [answered, isAnswered] = useState(false);
    const [onTime, setTime] = useState(false);

    const checkAnswer = (value: string) => {
        if (value.toLowerCase() === '–∫–æ—Ä–æ–ª—å –∏ —à—É—Ç') {
            isAnswered(true);
        }
        setAnswer(value);
    }

    const nextTask = async() => {
        if (answered) {
            localStorage.setItem('step', '4');
            await new Promise(resolve => setTimeout(resolve, 500));
            navigate(`/app/4`);
        }
    }

    useEffect(() => {
        const today = new Date();
        setTime(today.getDate() >= 30 && today.getMonth() >= 11);
    });

    return (
        <StyledPage>
            {onTime ? 
            (
                <>
                    <Paragraph>–û–≥–æ! –ö–∞–∫–∞—è —Ç—ã –º–æ–ª–æ–¥–µ—Ü‚ù§Ô∏è‚Äçüî•. –ö–∞–∫ —Ç–µ–±–µ –ø–æ–¥–∞—Ä–æ–∫? –ß–µ—Å—Ç–æ —è –±—ã–ª –Ω–µ —É–≤–µ—Ä–µ–Ω –Ω–∞—Å—á–µ—Ç –Ω–µ–≥–æ. –ë–æ—è–ª—Å—è —á—Ç–æ –∫–∞—Ä–∞–Ω–¥–∞—à–∏ –Ω–µ –ø–æ–Ω—Ä–∞–≤—è—Ç—Å—è.</Paragraph>
                    <Paragraph>–ü–æ—Ä–∞–¥–æ–≤–∞–ª–∏—Å—å –∏ —Ö–≤–∞—Ç–∏—Ç. –î–∞–≤–∞–π –ø–µ—Ä–µ–π–¥–µ–º –∫ —Å–ª–µ–¥—É—é—â–µ–π –∑–∞–≥–∞–¥–∫–µ.</Paragraph>
                    <Header>–ó–∞–≥–∞–¥–∫–∞ #3</Header>
                    <Task>–î–µ—à–∏—Ñ—Ä—É–π —Å–æ–æ–±—â–µ–Ω–∏–µ –∏ –æ—Ç–≤–µ—Ç—å –Ω–∞ –≤–æ–ø—Ä–æ—Å</Task>
                    <Paragraph>#m1ZxY #F8h2q #T9sBc #r4XqL #u7JkP #Z3f8z</Paragraph>
                    <Paragraph>–ò–Ω—Ç–µ—Ä–µ—Å–Ω–æ, –Ω–∞ —Å–∫–æ–ª—å–∫–æ —Ç–æ—á–Ω—ã–π –ø–æ–∏—Å–∫ –≤ —Ç–µ–ª–µ–≥—Ä–∞–º–º–µ?</Paragraph>
                    <InputBox inputType="text" placeholder="–¢–≤–æ–π –æ—Ç–≤–µ—Ç" value={answer} onChange={(value) => { checkAnswer(value); }} />
                    {answered? (
                        <–°orrect>–£–º–Ω–∏—á–∫–∞! –ú–æ–∂–µ—à—å –æ—Ç–∫—Ä—ã–≤–∞—Ç—å –ø–æ–¥–∞—Ä–æ–∫ #2207. –ò –ø–µ—Ä–µ—Ö–æ–¥–∏ –Ω–∞ —Å–ª–µ–¥—É—é—â—É—é —Å—Ç—Ä–∞–Ω–∏—á–∫—É</–°orrect>
                    ) : (
                        <Mistake>–ï—â–µ –Ω–µ –ø—Ä–∞–≤–∏–ª—å–Ω–æ...</Mistake>
                    )}
                    <Button onClick={nextTask} size="large" time={answered}>–î–∞–ª—å—à–µ?</Button>
                    <Need>–ó–∞–≥–∞–¥–∫–∞ #3</Need>
                </>
            ): (
                <Paragraph style={{alignSelf: "center", fontSize: "8vh", textAlign: "center"}}>–•–≤–∞—Ç–∏—Ç –Ω–∞ —Å–µ–≥–æ–¥–Ω—è! –ü—Ä–∏—Ö–æ–¥–∏ 30 –¥–µ–∫–∞–±—Ä—è!</Paragraph>
            )}
        </StyledPage>       
    );
}

export default ThirdPage;